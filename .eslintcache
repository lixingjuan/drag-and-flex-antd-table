[{"/Users/xingjuan.li/Documents/Codes/my/testtest/src/index.tsx":"1","/Users/xingjuan.li/Documents/Codes/my/testtest/src/reportWebVitals.ts":"2","/Users/xingjuan.li/Documents/Codes/my/testtest/src/App.tsx":"3","/Users/xingjuan.li/Documents/Codes/my/testtest/src/pages2/index.js":"4","/Users/xingjuan.li/Documents/Codes/my/testtest/src/pages/index.js":"5","/Users/xingjuan.li/Documents/Codes/my/testtest/src/components2/index.js":"6","/Users/xingjuan.li/Documents/Codes/my/testtest/src/components/index.js":"7","/Users/xingjuan.li/Documents/Codes/my/testtest/src/components2/ReactDragListView.jsx":"8","/Users/xingjuan.li/Documents/Codes/my/testtest/src/components2/ReactDragColumnView.jsx":"9","/Users/xingjuan.li/Documents/Codes/my/testtest/src/components/ReactDragListView.jsx":"10","/Users/xingjuan.li/Documents/Codes/my/testtest/src/components/ReactDragColumnView.jsx":"11","/Users/xingjuan.li/Documents/Codes/my/testtest/src/components2/util.js":"12","/Users/xingjuan.li/Documents/Codes/my/testtest/src/components/util.js":"13"},{"size":500,"mtime":1607909213450,"results":"14","hashOfConfig":"15"},{"size":425,"mtime":1607909213453,"results":"16","hashOfConfig":"15"},{"size":303,"mtime":1607909596518,"results":"17","hashOfConfig":"15"},{"size":1275,"mtime":1607909213452,"results":"18","hashOfConfig":"15"},{"size":1319,"mtime":1607909619975,"results":"19","hashOfConfig":"15"},{"size":197,"mtime":1607909213448,"results":"20","hashOfConfig":"15"},{"size":197,"mtime":1607909213447,"results":"21","hashOfConfig":"15"},{"size":6470,"mtime":1607911504290,"results":"22","hashOfConfig":"15"},{"size":2905,"mtime":1607909213448,"results":"23","hashOfConfig":"15"},{"size":6401,"mtime":1607909213447,"results":"24","hashOfConfig":"15"},{"size":2780,"mtime":1607909213447,"results":"25","hashOfConfig":"15"},{"size":1170,"mtime":1607909213448,"results":"26","hashOfConfig":"15"},{"size":1170,"mtime":1607909213447,"results":"27","hashOfConfig":"15"},{"filePath":"28","messages":"29","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},"1mq2en3",{"filePath":"31","messages":"32","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"33","messages":"34","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"35","usedDeprecatedRules":"30"},{"filePath":"36","messages":"37","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"38","usedDeprecatedRules":"39"},{"filePath":"40","messages":"41","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"42","usedDeprecatedRules":"39"},{"filePath":"43","messages":"44","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"39"},{"filePath":"45","messages":"46","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"39"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"49","usedDeprecatedRules":"39"},{"filePath":"50","messages":"51","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"52","usedDeprecatedRules":"39"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"39"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"39"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"39"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/xingjuan.li/Documents/Codes/my/testtest/src/index.tsx",[],["61","62"],"/Users/xingjuan.li/Documents/Codes/my/testtest/src/reportWebVitals.ts",[],"/Users/xingjuan.li/Documents/Codes/my/testtest/src/App.tsx",["63"],"import React from \"react\";\nimport \"./App.css\";\n\nimport Page from \"./pages/index\";\nimport Page2 from \"./pages2/index\";\nimport Page3 from \"./pages3/index\";\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Page />\n      <Page2 />\n      {/* <Page3 /> */}\n    </div>\n  );\n}\n\nexport default App;\n","/Users/xingjuan.li/Documents/Codes/my/testtest/src/pages2/index.js",["64","65"],"/* eslint-disable no-console,func-names,react/no-multi-comp */\nimport React, { useState } from \"react\";\nimport ReactDragListView from \"../components2/index.js\";\n\nimport \"./index.css\";\nimport \"./dragColumn.css\";\n\nconst { DragColumn } = ReactDragListView;\n\nconst initListData = Array(15)\n  .fill(undefined)\n  .map((it, index) => {\n    return {\n      title: `col${index}`\n    };\n  });\n\nconsole.log(initListData);\n\nfunction IndexPage() {\n  const [listData, setListData] = useState(initListData);\n\n  const dragProps = {\n    onDragEnd(fromIndex, toIndex) {\n      const tempData = [...listData];\n      const item = tempData.splice(fromIndex, 1)[0];\n      tempData.splice(toIndex, 0, item);\n      setListData(tempData);\n    },\n    nodeSelector: \"li\",\n    handleSelector: \"a\"\n  };\n\n  console.log({ listData });\n\n  return (\n    <div className=\"simple simple1 simple2\">\n      <div className=\"simple-inner\">\n        <ReactDragListView {...dragProps}>\n          <ol style={{ width: 70 * listData.length }}>\n            {listData.map((item, index) => (\n              <li key={index}>\n                {item.title}\n                <a href=\"#\">Drag</a>\n              </li>\n            ))}\n          </ol>\n        </ReactDragListView>\n      </div>\n    </div>\n  );\n}\n\nexport default IndexPage;\n",["66","67"],"/Users/xingjuan.li/Documents/Codes/my/testtest/src/pages/index.js",["68"],"/* eslint-disable no-console,func-names,react/no-multi-comp */\nimport React, { useState } from \"react\";\n// import ReactDragListView from \"../components/index.js\";\nimport ReactDragListView from \"../components/index.js\";\n\nimport \"./index.css\";\nimport \"./dragColumn.css\";\n\nconst { DragColumn } = ReactDragListView;\n\nconst initListData = Array(15)\n  .fill(undefined)\n  .map((it, index) => {\n    return {\n      title: `col${index}`\n    };\n  });\n\nconsole.log(initListData);\n\nfunction IndexPage() {\n  const [listData, setListData] = useState(initListData);\n\n  const dragProps = {\n    onDragEnd(fromIndex, toIndex) {\n      const tempData = [...listData];\n      const item = tempData.splice(fromIndex, 1)[0];\n      tempData.splice(toIndex, 0, item);\n      setListData(tempData);\n    },\n    nodeSelector: \"li\",\n    handleSelector: \"a\"\n  };\n\n  console.log({ listData });\n\n  return (\n    <div className=\"simple simple1 simple2\">\n      <div className=\"simple-inner\">\n        <DragColumn {...dragProps}>\n          <ol style={{ width: 70 * listData.length }}>\n            {listData.map((item, index) => (\n              <li key={index}>\n                {item.title}\n                <a href=\"#\">Drag</a>\n              </li>\n            ))}\n          </ol>\n        </DragColumn>\n      </div>\n    </div>\n  );\n}\n\nexport default IndexPage;\n","/Users/xingjuan.li/Documents/Codes/my/testtest/src/components2/index.js",[],"/Users/xingjuan.li/Documents/Codes/my/testtest/src/components/index.js",[],"/Users/xingjuan.li/Documents/Codes/my/testtest/src/components2/ReactDragListView.jsx",["69"],"import React, { useState, useEffect, useRef } from \"react\";\nimport { closest, getDomIndex, getScrollElement } from \"./util\";\n\nconst DIRECTIONS = {\n  TOP: 1,\n  BOTTOM: 3\n};\n\nconst UNIT_PX = \"px\";\nconst DRAG_LIND_STYLE =\n  \"position:fixed;z-index:9999;height:0;\" +\n  \"margin-top:-1px;border-bottom:dashed 2px red;display:none;\";\n\nfunction ReactDragListView(props) {\n  const [fromIndex, setfromIndex] = useState(-1);\n  const [toIndex, settoIndex] = useState(-1);\n\n  const [dragList, setdragList] = useState([]);\n  const [scrollTimerId, setscrollTimerId] = useState(-1);\n\n  const [dragLine, setdragLine] = useState();\n  const [direction, setdirection] = useState(DIRECTIONS.BOTTOM);\n\n  const currentRef = useRef();\n\n  if (currentRef.current) {\n    currentRef.current.scrollElement = null;\n  }\n\n  useEffect(() => {\n    return () => {\n      // if (this.dragLine && this.dragLine.parentNode) {\n      //   this.dragLine.parentNode.removeChild(this.dragLine);\n      //   this.dragLine = null;\n      //   this.cacheDragTarget = null;\n      // }\n    };\n  }, []);\n\n  const getDragNode = target => {\n    return closest(target, props.nodeSelector, dragList);\n  };\n\n  const onMouseDown = e => {\n    const handle = getHandleNode(e.target);\n\n    if (!handle) {\n      return;\n    }\n\n    const target =\n      !props.handleSelector || props.handleSelector === props.nodeSelector\n        ? handle\n        : getDragNode(handle);\n\n    if (target) {\n      handle.setAttribute(\"draggable\", false);\n      target.setAttribute(\"draggable\", true);\n      target.ondragstart = onDragStart;\n      target.ondragend = onDragEnd;\n    }\n  };\n\n  const onDragStart = e => {\n    const target = getDragNode(e.target);\n    const eventData = e;\n    if (target) {\n      const { parentNode } = target;\n      eventData.dataTransfer.setData(\"Text\", \"\");\n      eventData.dataTransfer.effectAllowed = \"move\";\n      parentNode.ondragenter = onDragEnter;\n      parentNode.ondragover = function(ev) {\n        ev.preventDefault();\n        return true;\n      };\n      const fromIndexTemp = getDomIndex(target, props.ignoreSelector);\n      setfromIndex(fromIndexTemp);\n      setfromIndex(fromIndex);\n\n      currentRef.current.scrollElement = getScrollElement(parentNode);\n    }\n  };\n\n  const onDragEnter = e => {\n    const target = getDragNode(e.target);\n    const eventData = e;\n    let toIndex;\n    if (target) {\n      toIndex = getDomIndex(target, props.ignoreSelector);\n      if (props.enableScroll) {\n        resolveAutoScroll(eventData, target);\n      }\n    } else {\n      toIndex = -1;\n      stopAutoScroll();\n    }\n    currentRef.current.cacheDragTarget = target;\n\n    settoIndex(toIndex);\n    fixDragLine(target);\n  };\n\n  const onDragEnd = e => {\n    const target = getDragNode(e.target);\n    stopAutoScroll();\n    if (target) {\n      target.removeAttribute(\"draggable\");\n      target.ondragstart = null;\n      target.ondragend = null;\n      target.parentNode.ondragenter = null;\n      target.parentNode.ondragover = null;\n\n      if (fromIndex >= 0 && fromIndex !== toIndex) {\n        props.onDragEnd(fromIndex, toIndex);\n      }\n    }\n    hideDragLine();\n    setfromIndex(-1);\n    settoIndex(-1);\n  };\n\n  const getHandleNode = target => {\n    return closest(\n      target,\n      props.handleSelector || props.nodeSelector,\n      dragList\n    );\n  };\n\n  const getDragLine = () => {\n    let dragLineTemp = dragLine;\n    if (!dragLineTemp) {\n      dragLineTemp = window.document.createElement(\"div\");\n      dragLineTemp.setAttribute(\"style\", DRAG_LIND_STYLE);\n      window.document.body.appendChild(dragLineTemp);\n    }\n\n    dragLineTemp.className = props.lineClassName || \"\";\n\n    return dragLineTemp;\n  };\n\n  const autoScroll = () => {\n    const { scrollTop } = currentRef.current.scrollElement;\n    if (direction === DIRECTIONS.BOTTOM) {\n      currentRef.current.scrollElement.scrollTop =\n        scrollTop + props.scrollSpeed;\n      if (scrollTop === currentRef.current.scrollElement.scrollTop) {\n        stopAutoScroll();\n      }\n    } else if (direction === DIRECTIONS.TOP) {\n      currentRef.current.scrollElement.scrollTop =\n        scrollTop - props.scrollSpeed;\n      if (currentRef.current.scrollElement.scrollTop <= 0) {\n        stopAutoScroll();\n      }\n    } else {\n      stopAutoScroll();\n    }\n  };\n\n  const resolveAutoScroll = (e, target) => {\n    if (!currentRef.current.scrollElement) {\n      return;\n    }\n    const {\n      top,\n      height\n    } = currentRef.current.scrollElement.getBoundingClientRect();\n    const targetHeight = target.offsetHeight;\n    const { pageY } = e;\n    const compatibleHeight = targetHeight * (2 / 3);\n    setdirection(0);\n\n    if (pageY > top + height - compatibleHeight) {\n      setdirection(DIRECTIONS.BOTTOM);\n    } else if (pageY < top + compatibleHeight) {\n      setdirection(DIRECTIONS.TOP);\n    }\n\n    if (direction) {\n      if (scrollTimerId < 0) {\n        const scrollTimerIdTemp = setInterval(autoScroll, 20);\n        setscrollTimerId(scrollTimerIdTemp);\n      }\n    } else {\n      stopAutoScroll();\n    }\n  };\n\n  const stopAutoScroll = () => {\n    clearInterval(scrollTimerId);\n    setscrollTimerId(-1);\n    fixDragLine(this.cacheDragTarget);\n  };\n\n  const hideDragLine = () => {\n    if (dragLine) {\n      setdragLine(pre => ({\n        ...pre,\n        style: {\n          ...pre.style,\n          display: \"none\"\n        }\n      }));\n      /* this.dragLine.style.display = \"none\"; */\n    }\n  };\n\n  const fixDragLine = target => {\n    const dragLine = getDragLine();\n    if (!target || fromIndex < 0 || fromIndex === toIndex) {\n      hideDragLine();\n      return;\n    }\n\n    const { left, top, width, height } = target.getBoundingClientRect();\n    const lineTop = toIndex < fromIndex ? top : top + height;\n\n    if (props.enableScroll && currentRef.current.scrollElement) {\n      const {\n        height: scrollHeight,\n        top: scrollTop\n      } = currentRef.current.scrollElement.getBoundingClientRect();\n      if (lineTop < scrollTop - 2 || lineTop > scrollTop + scrollHeight + 2) {\n        hideDragLine();\n        return;\n      }\n    }\n    dragLine.style.left = left + UNIT_PX;\n    dragLine.style.width = width + UNIT_PX;\n    dragLine.style.top = lineTop + UNIT_PX;\n    dragLine.style.display = \"block\";\n  };\n\n  return (\n    <div\n      role=\"presentation\"\n      onMouseDown={onMouseDown}\n      // ref={c => {\n      //   setdragList(c);\n      // }}\n      ref={currentRef}\n    >\n      {props.children}\n    </div>\n  );\n}\n\nexport default ReactDragListView;\n","/Users/xingjuan.li/Documents/Codes/my/testtest/src/components2/ReactDragColumnView.jsx",["70","71","72","73","74","75","76"],"import React, { Component } from \"react\";\nimport ReactDragListView from \"./ReactDragListView\";\n\nconst UNIT_PX = \"px\";\nconst DRAG_LIND_STYLE =\n  \"width:0;margin-left:-1px;margin-top:0;\" +\n  \"border-bottom:0 none;border-left:dashed 2px red;\";\nconst DIRECTIONS = {\n  RIGHT: 2,\n  LEFT: 4\n};\n\nfunction ReactDragColumnView() {\n  const getDragLine = () => {\n    if (!this.dragLine) {\n      this.props.getDragLine();\n      this.dragLine.setAttribute(\n        \"style\",\n        this.dragLine.getAttribute(\"style\") + DRAG_LIND_STYLE\n      );\n    }\n    return this.dragLine;\n  };\n\n  const resolveAutoScroll = (e, target) => {\n    if (!this.scrollElement) {\n      return;\n    }\n    const { left, width } = this.scrollElement.getBoundingClientRect();\n    const targetWidth = target.offsetWidth;\n    const { pageX } = e;\n    const compatibleWidth = (targetWidth * 2) / 3;\n    this.direction = 0;\n    if (pageX > left + width - compatibleWidth) {\n      this.direction = DIRECTIONS.RIGHT;\n    } else if (pageX < left + compatibleWidth) {\n      this.direction = DIRECTIONS.LEFT;\n    }\n    if (this.direction) {\n      if (this.scrollTimerId < 0) {\n        this.scrollTimerId = setInterval(this.autoScroll, 20);\n      }\n    } else {\n      this.stopAutoScroll();\n    }\n  };\n\n  const autoScroll = () => {\n    const { scrollLeft } = this.scrollElement;\n    if (this.direction === DIRECTIONS.RIGHT) {\n      this.scrollElement.scrollLeft = scrollLeft + this.props.scrollSpeed;\n      if (scrollLeft === this.scrollElement.scrollLeft) {\n        this.stopAutoScroll();\n      }\n    } else if (this.direction === DIRECTIONS.LEFT) {\n      this.scrollElement.scrollLeft = scrollLeft - this.props.scrollSpeed;\n      if (this.scrollElement.scrollLeft <= 0) {\n        this.stopAutoScroll();\n      }\n    } else {\n      this.stopAutoScroll();\n    }\n  };\n\n  const fixDragLine = target => {\n    const dragLine = this.getDragLine();\n    if (\n      !target ||\n      this.state.fromIndex < 0 ||\n      this.state.fromIndex === this.state.toIndex\n    ) {\n      this.hideDragLine();\n      return;\n    }\n    const { left, top, width, height } = target.getBoundingClientRect();\n    const lineLeft =\n      this.state.toIndex < this.state.fromIndex ? left : left + width;\n    if (this.props.enableScroll && this.scrollElement) {\n      const {\n        width: scrollWidth,\n        left: scrollLeft\n      } = this.scrollElement.getBoundingClientRect();\n      if (\n        lineLeft < scrollLeft - 2 ||\n        lineLeft > scrollLeft + scrollWidth + 2\n      ) {\n        this.hideDragLine();\n        return;\n      }\n    }\n    dragLine.style.top = top + UNIT_PX;\n    dragLine.style.height = height + UNIT_PX;\n    dragLine.style.left = lineLeft + UNIT_PX;\n    dragLine.style.display = \"block\";\n  };\n}\n\n// const ReactDragListViewInstance = new ReactDragListView();\n// ReactDragColumnView.prototype = ReactDragListViewInstance;\n\nexport default ReactDragColumnView;\n","/Users/xingjuan.li/Documents/Codes/my/testtest/src/components/ReactDragListView.jsx",[],"/Users/xingjuan.li/Documents/Codes/my/testtest/src/components/ReactDragColumnView.jsx",[],"/Users/xingjuan.li/Documents/Codes/my/testtest/src/components2/util.js",[],"/Users/xingjuan.li/Documents/Codes/my/testtest/src/components/util.js",[],{"ruleId":"77","replacedBy":"78"},{"ruleId":"79","replacedBy":"80"},{"ruleId":"81","severity":1,"message":"82","line":6,"column":8,"nodeType":"83","messageId":"84","endLine":6,"endColumn":13},{"ruleId":"85","severity":1,"message":"86","line":8,"column":9,"nodeType":"83","messageId":"84","endLine":8,"endColumn":19},{"ruleId":"87","severity":1,"message":"88","line":44,"column":17,"nodeType":"89","endLine":44,"endColumn":29},{"ruleId":"77","replacedBy":"78"},{"ruleId":"79","replacedBy":"80"},{"ruleId":"87","severity":1,"message":"88","line":45,"column":17,"nodeType":"89","endLine":45,"endColumn":29},{"ruleId":"85","severity":1,"message":"90","line":18,"column":20,"nodeType":"83","messageId":"84","endLine":18,"endColumn":31},{"ruleId":"85","severity":1,"message":"91","line":1,"column":8,"nodeType":"83","messageId":"84","endLine":1,"endColumn":13},{"ruleId":"85","severity":1,"message":"92","line":1,"column":17,"nodeType":"83","messageId":"84","endLine":1,"endColumn":26},{"ruleId":"85","severity":1,"message":"93","line":2,"column":8,"nodeType":"83","messageId":"84","endLine":2,"endColumn":25},{"ruleId":"85","severity":1,"message":"94","line":14,"column":9,"nodeType":"83","messageId":"84","endLine":14,"endColumn":20},{"ruleId":"85","severity":1,"message":"95","line":25,"column":9,"nodeType":"83","messageId":"84","endLine":25,"endColumn":26},{"ruleId":"85","severity":1,"message":"96","line":48,"column":9,"nodeType":"83","messageId":"84","endLine":48,"endColumn":19},{"ruleId":"85","severity":1,"message":"97","line":65,"column":9,"nodeType":"83","messageId":"84","endLine":65,"endColumn":20},"no-native-reassign",["98"],"no-negated-in-lhs",["99"],"@typescript-eslint/no-unused-vars","'Page3' is defined but never used.","Identifier","unusedVar","no-unused-vars","'DragColumn' is assigned a value but never used.","jsx-a11y/anchor-is-valid","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement","'setdragList' is assigned a value but never used.","'React' is defined but never used.","'Component' is defined but never used.","'ReactDragListView' is defined but never used.","'getDragLine' is assigned a value but never used.","'resolveAutoScroll' is assigned a value but never used.","'autoScroll' is assigned a value but never used.","'fixDragLine' is assigned a value but never used.","no-global-assign","no-unsafe-negation"]